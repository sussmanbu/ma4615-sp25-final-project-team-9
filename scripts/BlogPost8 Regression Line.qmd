```{r}
library(highcharter)
library(dplyr)
library(readr)
library(viridisLite)
harassment_data <-read_csv("dataset/clean_data file/merged_harassment_dataset.csv")

# Define the enrollment columns
enrollment_cols <- c(
  "SCH_ENR_HI_M", "SCH_ENR_HI_F", 
  "SCH_ENR_AM_M", "SCH_ENR_AM_F", 
  "SCH_ENR_AS_M", "SCH_ENR_AS_F",
  "SCH_ENR_HP_M", "SCH_ENR_HP_F",
  "SCH_ENR_BL_M", "SCH_ENR_BL_F",
  "SCH_ENR_WH_M", "SCH_ENR_WH_F",
  "SCH_ENR_TR_M", "SCH_ENR_TR_F"
)

# Calculate total enrollment per school
harassment_data <- harassment_data %>%
  mutate(TOTAL_ENROLLMENT = rowSums(across(all_of(enrollment_cols)), na.rm = TRUE))

# Aggregate by state and calculate rate per 100 students
bullying_data <- harassment_data %>%
  group_by(LEA_STATE) %>%
  summarise(
    total_allegations = sum(HBALLEGATIONS_RAC + HBALLEGATIONS_REL + HBALLEGATIONS_ORI, na.rm = TRUE),
    total_students = sum(TOTAL_ENROLLMENT, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(rate_per_100 = round(total_allegations / total_students * 100, 2))
# Create a key that matches highmaps "hc-key" format
bullying_data <- bullying_data %>%
  mutate(`hc-key` = paste0("us-", tolower(LEA_STATE)))
library(highcharter)
library(viridisLite)

# Load map data FIRST
usgeojson <- get_data_from_map(download_map_data("countries/us/us-all"))

# Plot using hcmap instead of hchart
hcmap(
  "countries/us/us-all",     # Built-in Highmaps map
  data = bullying_data,
  name = "Allegations per 100 students",
  value = "rate_per_100",
  joinBy = c("hc-key", "hc-key"),  # key match for map + data
  borderWidth = 0,
  nullColor = "#d3d3d3"
) %>%
  hc_colorAxis(
    stops = color_stops(colors = viridisLite::inferno(10)),
    min = 0
  ) %>%
  hc_title(text = "Harassment/Bullying Allegations per 100 Students by State") %>%
  hc_tooltip(pointFormat = "{point.name}: {point.value}")


```

#Model Analysis School Support & Harassment
```{r}
library(tidyverse)
library(ggpmisc)
library(broom)
library(knitr)

# Load and process data
data <- read_csv("dataset/clean_data file/final_clean_data.csv")

data <- data %>%
  mutate(
    total_support = FTECOUNSELORS + FTESERVICES_PSY + FTESECURITY_GUA,
    total_enrollment = ENR_HI_M + ENR_HI_F + ENR_AM_M + ENR_AM_F +
                       ENR_AS_M + ENR_AS_F + ENR_HP_M + ENR_HP_F +
                       ENR_BL_M + ENR_BL_F + ENR_WH_M + ENR_WH_F +
                       ENR_TR_M + ENR_TR_F,
    allegations_per_100 = (HBALLEGATIONS_RAC + HBALLEGATIONS_REL +
                           HBALLEGATIONS_SEX + HBALLEGATIONS_DIS) / total_enrollment * 100
  ) %>%
  # Filter to ensure log transformation is valid
  filter(total_support > 0, allegations_per_100 > 0)

# Plot with regression equation and R²
ggplot(data, aes(x = total_support, y = allegations_per_100)) +
  geom_point(alpha = 0.3) +
  scale_x_log10() +
  scale_y_log10() +
  geom_smooth(method = "lm", formula = y ~ x, color = "forestgreen", se = TRUE) +
  stat_poly_eq(
    aes(label = after_stat(paste(eq.label, rr.label, sep = "~~~"))),
    formula = y ~ x,
    parse = TRUE,
    label.x.npc = "right",
    label.y.npc = "top",
    size = 5,
    color = "black"
  ) +
  labs(
    x = "Log(Total School Support Staff)",
    y = "Log(Harassment Allegations per 100 Students)",
    title = "Log-Log Relationship Between School Support and Harassment Reports"
  ) +
  theme_minimal()

#Model Evaluation
model <- lm(log(allegations_per_100) ~ log(total_support), data = data)

model_stats <- glance(model) %>%
  transmute(
    `R-squared` = r.squared,
    `Adjusted R-squared` = adj.r.squared,
    Sigma = sigma,
    `F-statistic` = statistic,
    `p-value` = p.value,
    `Degrees of Freedom` = df
  ) %>%
  pivot_longer(everything(), names_to = "Metric", values_to = "Value")

kable(model_stats, caption = "Model Fit Statistics Table")


#Redisual VS Fitted
model_diag <- augment(model)

# Plot using ggplot
ggplot(model_diag, aes(.fitted, .resid)) +
  geom_point(alpha = 0.4) +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(
    x = "Fitted Values",
    y = "Residuals",
    title = "Residuals vs Fitted Plot"
  ) +
  theme_minimal()

ggplot(model_diag, aes(sample = .resid)) +
  stat_qq(alpha = 0.4) +
  stat_qq_line(color = "red") +
  labs(
    title = "Q-Q Plot of Model Residuals",
    x = "Theoretical Quantiles",
    y = "Sample Quantiles"
  ) +
  theme_minimal()
```
Comment:In this model, we've removed all values with 0 and NAs, because The logarithmic function is undefined at zero and negative values. Attempting to compute log⁡(0) results in negative infinity, which can cause computational issues and distort analyses.
Slope: β1=−0.352, it indicates that a 1% increase in total support staff is associated with a 0.352% decrease in harassment allegations per 100 students. This negative elasticity suggests that more support staff correlates with fewer reported incidents.
Intercept (β0): This represents the expected log of allegations per 100 students when the log of total support staff is zero.
R^2 = 0.08 : This means that approximately 8% of the variability in harassment allegations per 100 students is explained by the model. While the relationship is statistically significant, other factors not included in the model likely influence the number of allegations.

```{r}
library(tidyverse)

# STEP 1: Create the dataset for modeling
data_model <- data %>%
  mutate(
    total_support = FTECOUNSELORS + FTESERVICES_PSY + FTESECURITY_GUA,
    
    harassment_HI = HBREPORTED_RAC_HI_M + HBREPORTED_RAC_HI_F,
    harassment_AM = HBREPORTED_RAC_AM_M + HBREPORTED_RAC_AM_F,
    harassment_AS = HBREPORTED_RAC_AS_M + HBREPORTED_RAC_AS_F,
    harassment_HP = HBREPORTED_RAC_HP_M + HBREPORTED_RAC_HP_F,
    harassment_BL = HBREPORTED_RAC_BL_M + HBREPORTED_RAC_BL_F,
    harassment_WH = HBREPORTED_RAC_WH_M + HBREPORTED_RAC_WH_F,
    harassment_TR = HBREPORTED_RAC_TR_M + HBREPORTED_RAC_TR_F,

    enrollment_HI = ENR_HI_M + ENR_HI_F,
    enrollment_AM = ENR_AM_M + ENR_AM_F,
    enrollment_AS = ENR_AS_M + ENR_AS_F,
    enrollment_HP = ENR_HP_M + ENR_HP_F,
    enrollment_BL = ENR_BL_M + ENR_BL_F,
    enrollment_WH = ENR_WH_M + ENR_WH_F,
    enrollment_TR = ENR_TR_M + ENR_TR_F
  ) %>%
  # Pivot into long format to have one row per race group per school
  select(total_support, starts_with("harassment_"), starts_with("enrollment_")) %>%
  pivot_longer(cols = -total_support,
               names_to = c(".value", "Race"),
               names_pattern = "(harassment|enrollment)_(.*)") %>%
  filter(total_support > 0, enrollment > 10, harassment > 0) %>%
  mutate(
    per100 = 100 * harassment / enrollment,
    log_per100 = log(per100),
    log_support = log(total_support),
    Race = factor(Race)
  )

# STEP 2: Set reference group if you want (optional)
# data_model$Race <- relevel(data_model$Race, ref = "AS")  # example

# STEP 3: Run regression
model <- lm(log_per100 ~ log_support + Race, data = data_model)

# STEP 4: Display the coefficients cleanly
library(broom)

tidy(model)

library(ggplot2)

# Optional: Set reference group for clarity in plot
# data_model$Race <- relevel(data_model$Race, ref = "AS")

# Plot
ggplot(data_model, aes(x = log_support, y = log_per100, color = Race)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  facet_wrap(~ Race, scales = "free_y") +
  labs(
    title = "Log-Log Regression of Allegations per 100 by Race",
    x = "Log(Total School Support Staff)",
    y = "Log(Harassment Allegations per 100 Students)"
  ) +
  theme_minimal()

```


