---
title: "Blogpost7"
format: html
---

```{r}
library(tidyverse)
library(janitor)
library(plotly)  # for interactivity

# Load and clean
bullying <- read_csv("dataset/Harassment and Bullying.csv") %>% clean_names()

# Filter to Massachusetts only
ma_bullying <- bullying %>%
  filter(lea_state_name == "Massachusetts")


```

```{r}
ma_long <- ma_bullying %>%
  select(lea_name, 
         sex = sch_hballegations_sex,
         race = sch_hballegations_rac,
         orientation = sch_hballegations_ori,
         disability = sch_hballegations_dis,
         religion = sch_hballegations_rel) %>%
  pivot_longer(cols = -lea_name, names_to = "allegation_type", values_to = "count") %>%
  mutate(allegation_type = str_to_title(allegation_type))  # capitalize

```

```{r}
library(plotly)

plot_data <- ma_long %>%
  group_by(lea_name, allegation_type) %>%
  summarise(total = sum(count, na.rm = TRUE), .groups = "drop")

plot_ly(data = plot_data,
        x = ~total,
        y = ~reorder(lea_name, total),
        type = 'bar',
        orientation = 'h',
        color = ~allegation_type) %>%
  layout(title = "Harassment Allegations by District and Type",
         xaxis = list(title = "Total Allegations"),
         yaxis = list(title = "District"),
         barmode = "stack")


```
```{r}
# Load libraries
library(tidyverse)
library(janitor)
library(plotly)

# Step 1: Load and filter the data
bullying <- read_csv("dataset/Harassment and Bullying.csv") %>% clean_names()

# Check the columns and a few rows
print("Step 1: Columns and sample data")
print(colnames(bullying))
print(head(bullying))

# Step 2: Filter to Massachusetts only
ma_bullying <- bullying %>%
  filter(lea_state_name == "Massachusetts")

print("Step 2: Rows for Massachusetts")
print(nrow(ma_bullying))
print(unique(ma_bullying$lea_name))

# Step 3: Select relevant allegation columns
ma_long <- ma_bullying %>%
  select(lea_name, 
         sex = sch_hballegations_sex,
         race = sch_hballegations_rac,
         orientation = sch_hballegations_ori,
         disability = sch_hballegations_dis,
         religion = sch_hballegations_rel) %>%
  pivot_longer(cols = -lea_name, names_to = "allegation_type", values_to = "count") %>%
  mutate(allegation_type = str_to_title(allegation_type))

# Check reshaped data
print("Step 3: Reshaped long format")
print(head(ma_long))
print(unique(ma_long$allegation_type))

# Step 4: Aggregate for plotting
plot_data <- ma_long %>%
  group_by(lea_name, allegation_type) %>%
  summarise(total = sum(count, na.rm = TRUE), .groups = "drop")

# Confirm we have plot data
print("Step 4: Final data for plotting")
print(head(plot_data))

# Step 5: Plot with dropdown menu
plot_ly(data = plot_data,
        x = ~total,
        y = ~reorder(lea_name, total),
        type = "bar",
        orientation = "h",
        transforms = list(
          list(
            type = 'filter',
            target = ~allegation_type,
            operation = '=',
            value = 'Sex'  # Default
          )
        ),
        text = ~paste("District:", lea_name, "<br>Total:", total),
        hoverinfo = 'text') %>%
  layout(title = "Massachusetts Harassment Allegations by Type",
         xaxis = list(title = "Total Allegations"),
         yaxis = list(title = "District"),
         updatemenus = list(
           list(
             type = 'dropdown',
             active = 0,
             buttons = lapply(unique(plot_data$allegation_type), function(type) {
               list(method = "restyle",
                    args = list("transforms[0].value", type),
                    label = type)
             })
           )
         ))


```
```{r}
install.packages("shiny")
install.packages("shinylive")

```

